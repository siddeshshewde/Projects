{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5","program":"/home/voidxe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_utils","--edition=2018","/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=6ea41e475e1af56c","-C","extra-filename=-6ea41e475e1af56c","--out-dir","/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps","-L","dependency=/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps","--extern","cfg_if=/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps/libcfg_if-1ea64960760a6d98.rmeta","--extern","lazy_static=/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps/liblazy_static-cc03ae82f95c691d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/voidxe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps/libcrossbeam_utils-6ea41e475e1af56c.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[12064038864711492392,0]},"crate_root":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src","external_crates":[{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[2249586477558165697,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","num":20,"id":{"name":"lazy_static","disambiguator":[18257175922802125800,0]}}],"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":4427,"byte_end":4437,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":4462,"byte_end":4475,"line_start":32,"line_end":32,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139610,"byte_end":12139616,"line_start":12,"line_end":12,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":397}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139618,"byte_end":12139626,"line_start":12,"line_end":12,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":397}},{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139686,"byte_end":12139697,"line_start":14,"line_end":14,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":397}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139699,"byte_end":12139719,"line_start":14,"line_end":14,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":397}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139721,"byte_end":12139742,"line_start":14,"line_end":14,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":397}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139771,"byte_end":12139780,"line_start":15,"line_end":15,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":397}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":57},{"krate":0,"index":181},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":397},{"krate":0,"index":679}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":58},{"krate":0,"index":163},{"krate":0,"index":175},{"krate":0,"index":178}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5646,"byte_end":5656,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4925,"byte_end":4967,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4968,"byte_end":4971,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":4972,"byte_end":5065,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5066,"byte_end":5069,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5070,"byte_end":5166,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5167,"byte_end":5260,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5261,"byte_end":5307,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5308,"byte_end":5311,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5312,"byte_end":5405,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5406,"byte_end":5409,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5410,"byte_end":5439,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5440,"byte_end":5505,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5506,"byte_end":5559,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5560,"byte_end":5613,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5614,"byte_end":5634,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6422,"byte_end":6425,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6199,"byte_end":6252,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6257,"byte_end":6260,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6265,"byte_end":6279,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6284,"byte_end":6287,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6292,"byte_end":6299,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6304,"byte_end":6348,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6353,"byte_end":6356,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6361,"byte_end":6392,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6397,"byte_end":6404,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6822,"byte_end":6832,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6536,"byte_end":6592,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6597,"byte_end":6600,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6605,"byte_end":6619,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6624,"byte_end":6627,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6632,"byte_end":6639,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6644,"byte_end":6688,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6693,"byte_end":6696,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6701,"byte_end":6732,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6737,"byte_end":6764,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6769,"byte_end":6772,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6777,"byte_end":6798,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6803,"byte_end":6810,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8113,"byte_end":8125,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6889,"byte_end":6959,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6964,"byte_end":6967,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6972,"byte_end":7058,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7063,"byte_end":7155,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7160,"byte_end":7163,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7168,"byte_end":7182,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7187,"byte_end":7190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7195,"byte_end":7202,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7207,"byte_end":7251,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7256,"byte_end":7259,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7264,"byte_end":7349,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7354,"byte_end":7387,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7392,"byte_end":7450,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7455,"byte_end":7458,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7463,"byte_end":7502,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7507,"byte_end":7523,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7528,"byte_end":7547,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7552,"byte_end":7557,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7562,"byte_end":7635,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7640,"byte_end":7696,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7701,"byte_end":7704,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7709,"byte_end":7768,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7773,"byte_end":7828,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7833,"byte_end":7836,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7841,"byte_end":7933,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":7938,"byte_end":8014,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8019,"byte_end":8083,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8088,"byte_end":8095,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8480,"byte_end":8485,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8184,"byte_end":8222,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8227,"byte_end":8230,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8235,"byte_end":8249,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8254,"byte_end":8257,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8262,"byte_end":8269,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8274,"byte_end":8318,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8323,"byte_end":8326,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8331,"byte_end":8362,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8367,"byte_end":8370,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8375,"byte_end":8403,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8408,"byte_end":8423,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8428,"byte_end":8456,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8461,"byte_end":8468,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9040,"byte_end":9044,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8699,"byte_end":8768,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8773,"byte_end":8776,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8781,"byte_end":8795,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8800,"byte_end":8803,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8808,"byte_end":8815,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8820,"byte_end":8864,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8869,"byte_end":8872,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8877,"byte_end":8908,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8913,"byte_end":8916,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8921,"byte_end":8949,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8954,"byte_end":8983,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":8988,"byte_end":9016,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9021,"byte_end":9028,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9451,"byte_end":9457,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9166,"byte_end":9235,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9240,"byte_end":9243,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9248,"byte_end":9262,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9267,"byte_end":9270,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9275,"byte_end":9282,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9287,"byte_end":9331,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9336,"byte_end":9339,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9344,"byte_end":9375,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9380,"byte_end":9383,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9388,"byte_end":9413,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9418,"byte_end":9425,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9430,"byte_end":9439,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9899,"byte_end":9903,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9548,"byte_end":9630,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9635,"byte_end":9638,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9643,"byte_end":9657,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9662,"byte_end":9665,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9670,"byte_end":9677,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9682,"byte_end":9726,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9731,"byte_end":9734,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9739,"byte_end":9770,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9775,"byte_end":9799,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9804,"byte_end":9807,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9812,"byte_end":9836,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9841,"byte_end":9875,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9880,"byte_end":9887,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10243,"byte_end":10247,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9999,"byte_end":10038,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10043,"byte_end":10046,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10051,"byte_end":10065,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10070,"byte_end":10073,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10078,"byte_end":10085,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10090,"byte_end":10134,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10139,"byte_end":10142,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10147,"byte_end":10178,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10183,"byte_end":10186,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10191,"byte_end":10219,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10224,"byte_end":10231,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11046,"byte_end":11062,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10359,"byte_end":10436,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10441,"byte_end":10444,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10449,"byte_end":10543,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10548,"byte_end":10564,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10569,"byte_end":10572,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10577,"byte_end":10591,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10596,"byte_end":10599,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10604,"byte_end":10611,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10616,"byte_end":10643,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10648,"byte_end":10692,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10697,"byte_end":10700,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10705,"byte_end":10736,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10741,"byte_end":10744,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10749,"byte_end":10793,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10798,"byte_end":10826,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10831,"byte_end":10834,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10839,"byte_end":10883,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10888,"byte_end":10916,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10921,"byte_end":10928,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10980,"byte_end":11034,"line_start":232,"line_end":232,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11844,"byte_end":11860,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11219,"byte_end":11296,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11301,"byte_end":11304,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11309,"byte_end":11401,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11406,"byte_end":11491,"line_start":243,"line_end":243,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11496,"byte_end":11499,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11504,"byte_end":11518,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11523,"byte_end":11526,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11531,"byte_end":11538,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11543,"byte_end":11587,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11592,"byte_end":11595,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11600,"byte_end":11631,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11636,"byte_end":11639,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11644,"byte_end":11693,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11698,"byte_end":11726,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11731,"byte_end":11734,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11739,"byte_end":11787,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11792,"byte_end":11820,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11825,"byte_end":11832,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12856,"byte_end":12868,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"pub fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) ->\nOption<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":11997,"byte_end":12073,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12078,"byte_end":12176,"line_start":263,"line_end":263,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12181,"byte_end":12207,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12212,"byte_end":12215,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12220,"byte_end":12323,"line_start":266,"line_end":266,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12328,"byte_end":12428,"line_start":267,"line_end":267,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12433,"byte_end":12467,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12472,"byte_end":12475,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12480,"byte_end":12494,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12499,"byte_end":12502,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12507,"byte_end":12518,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12523,"byte_end":12567,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12572,"byte_end":12575,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12580,"byte_end":12611,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12616,"byte_end":12665,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12670,"byte_end":12725,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12730,"byte_end":12785,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12790,"byte_end":12818,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12823,"byte_end":12830,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":12835,"byte_end":12844,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23275,"byte_end":23284,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22836,"byte_end":22914,"line_start":560,"line_end":560,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22919,"byte_end":22922,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22927,"byte_end":22941,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22946,"byte_end":22949,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22954,"byte_end":22961,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22966,"byte_end":23010,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23015,"byte_end":23018,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23023,"byte_end":23057,"line_start":567,"line_end":567,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23062,"byte_end":23065,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23070,"byte_end":23110,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23115,"byte_end":23146,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23151,"byte_end":23154,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23159,"byte_end":23200,"line_start":572,"line_end":572,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23205,"byte_end":23237,"line_start":573,"line_end":573,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23242,"byte_end":23249,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23254,"byte_end":23263,"line_start":575,"line_end":575,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23876,"byte_end":23884,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23437,"byte_end":23514,"line_start":581,"line_end":581,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23519,"byte_end":23522,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23527,"byte_end":23541,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23546,"byte_end":23549,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23554,"byte_end":23561,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23566,"byte_end":23610,"line_start":586,"line_end":586,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23615,"byte_end":23618,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23623,"byte_end":23658,"line_start":588,"line_end":588,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23663,"byte_end":23666,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23671,"byte_end":23712,"line_start":590,"line_end":590,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23717,"byte_end":23749,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23754,"byte_end":23757,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23762,"byte_end":23802,"line_start":593,"line_end":593,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23807,"byte_end":23838,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23843,"byte_end":23850,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":23855,"byte_end":23864,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24475,"byte_end":24484,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24036,"byte_end":24114,"line_start":602,"line_end":602,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24119,"byte_end":24122,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24127,"byte_end":24141,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24146,"byte_end":24149,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24154,"byte_end":24161,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24166,"byte_end":24210,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24215,"byte_end":24218,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24223,"byte_end":24257,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24262,"byte_end":24265,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24270,"byte_end":24311,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24316,"byte_end":24347,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24352,"byte_end":24355,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24360,"byte_end":24400,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24405,"byte_end":24437,"line_start":615,"line_end":615,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24442,"byte_end":24449,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24454,"byte_end":24463,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37347,"byte_end":37360,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37253,"byte_end":37336,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":168},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37413,"byte_end":37416,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37367,"byte_end":37403,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38254,"byte_end":38266,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37423,"byte_end":37491,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37496,"byte_end":37499,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37504,"byte_end":37577,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37582,"byte_end":37658,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37663,"byte_end":37734,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37739,"byte_end":37813,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37818,"byte_end":37841,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37846,"byte_end":37849,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37854,"byte_end":37929,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":37934,"byte_end":38008,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38013,"byte_end":38047,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38052,"byte_end":38055,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38060,"byte_end":38132,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38137,"byte_end":38211,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":38216,"byte_end":38246,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44825,"byte_end":44836,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40020,"byte_end":40078,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40079,"byte_end":40082,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40083,"byte_end":40180,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40181,"byte_end":40277,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40278,"byte_end":40375,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40376,"byte_end":40470,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40471,"byte_end":40487,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40488,"byte_end":40491,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40492,"byte_end":40516,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40517,"byte_end":40520,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40521,"byte_end":40599,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40600,"byte_end":40603,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40604,"byte_end":40653,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40654,"byte_end":40702,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40703,"byte_end":40727,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40728,"byte_end":40756,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40757,"byte_end":40760,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40761,"byte_end":40856,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40857,"byte_end":40948,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":40949,"byte_end":41048,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41049,"byte_end":41084,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41085,"byte_end":41088,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41089,"byte_end":41185,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41186,"byte_end":41210,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41211,"byte_end":41214,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41215,"byte_end":41304,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41305,"byte_end":41308,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41309,"byte_end":41323,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41324,"byte_end":41327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41328,"byte_end":41354,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41355,"byte_end":41358,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41359,"byte_end":41366,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41367,"byte_end":41404,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41405,"byte_end":41408,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41409,"byte_end":41472,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41473,"byte_end":41522,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41523,"byte_end":41572,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41573,"byte_end":41576,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41577,"byte_end":41610,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41611,"byte_end":41641,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41642,"byte_end":41672,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41673,"byte_end":41680,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41681,"byte_end":41684,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41685,"byte_end":41779,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41780,"byte_end":41878,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41879,"byte_end":41908,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41909,"byte_end":41912,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41913,"byte_end":41920,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41921,"byte_end":41958,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41959,"byte_end":41998,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":41999,"byte_end":42002,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42003,"byte_end":42024,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42025,"byte_end":42064,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42065,"byte_end":42104,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42105,"byte_end":42128,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42129,"byte_end":42134,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":42135,"byte_end":42142,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":43096,"byte_end":43112,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45218,"byte_end":45221,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44985,"byte_end":45043,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45048,"byte_end":45051,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45056,"byte_end":45070,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45075,"byte_end":45078,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45083,"byte_end":45090,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45095,"byte_end":45132,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45137,"byte_end":45140,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45145,"byte_end":45188,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45193,"byte_end":45200,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45571,"byte_end":45581,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45297,"byte_end":45325,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45330,"byte_end":45333,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45338,"byte_end":45352,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45357,"byte_end":45360,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45365,"byte_end":45372,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45377,"byte_end":45414,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45419,"byte_end":45422,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45427,"byte_end":45470,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45475,"byte_end":45517,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45522,"byte_end":45547,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45552,"byte_end":45559,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48514,"byte_end":48521,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46306,"byte_end":46353,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46354,"byte_end":46357,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46358,"byte_end":46440,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46441,"byte_end":46444,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46445,"byte_end":46544,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46545,"byte_end":46642,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46643,"byte_end":46737,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46738,"byte_end":46747,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46748,"byte_end":46751,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46752,"byte_end":46766,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46767,"byte_end":46770,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46771,"byte_end":46807,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46808,"byte_end":46811,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46812,"byte_end":46819,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46820,"byte_end":46853,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46854,"byte_end":46893,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46894,"byte_end":46938,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46939,"byte_end":46942,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46943,"byte_end":46997,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":46998,"byte_end":47035,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47036,"byte_end":47050,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47051,"byte_end":47088,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47089,"byte_end":47174,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47175,"byte_end":47202,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47203,"byte_end":47216,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47217,"byte_end":47244,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47245,"byte_end":47254,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47255,"byte_end":47260,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47261,"byte_end":47268,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47269,"byte_end":47272,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47273,"byte_end":47324,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47325,"byte_end":47328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47329,"byte_end":47336,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47337,"byte_end":47370,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47371,"byte_end":47409,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47410,"byte_end":47454,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47455,"byte_end":47458,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47459,"byte_end":47497,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47498,"byte_end":47535,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47536,"byte_end":47571,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47572,"byte_end":47601,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47602,"byte_end":47611,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47612,"byte_end":47617,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47618,"byte_end":47625,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47626,"byte_end":47629,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47630,"byte_end":47722,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47723,"byte_end":47820,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47821,"byte_end":47838,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47839,"byte_end":47842,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47843,"byte_end":47850,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47851,"byte_end":47884,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47885,"byte_end":47923,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47924,"byte_end":47968,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47969,"byte_end":47989,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47990,"byte_end":47993,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":47994,"byte_end":48036,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48037,"byte_end":48074,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48075,"byte_end":48110,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48111,"byte_end":48150,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48151,"byte_end":48182,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48183,"byte_end":48203,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48204,"byte_end":48237,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48238,"byte_end":48251,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48252,"byte_end":48261,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48262,"byte_end":48267,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48268,"byte_end":48275,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48276,"byte_end":48279,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48280,"byte_end":48323,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48324,"byte_end":48370,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48371,"byte_end":48406,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48407,"byte_end":48456,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48457,"byte_end":48502,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48764,"byte_end":48767,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48567,"byte_end":48595,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48600,"byte_end":48603,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48608,"byte_end":48622,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48627,"byte_end":48630,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48635,"byte_end":48642,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48647,"byte_end":48680,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48685,"byte_end":48688,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48693,"byte_end":48726,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48731,"byte_end":48738,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48743,"byte_end":48752,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49049,"byte_end":49054,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48830,"byte_end":48855,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48860,"byte_end":48863,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48868,"byte_end":48882,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48887,"byte_end":48890,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48895,"byte_end":48902,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48907,"byte_end":48940,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48945,"byte_end":48948,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48953,"byte_end":48986,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48991,"byte_end":49011,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49016,"byte_end":49023,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49028,"byte_end":49037,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50098,"byte_end":50102,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49101,"byte_end":49135,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49140,"byte_end":49143,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49148,"byte_end":49241,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49246,"byte_end":49259,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49264,"byte_end":49267,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49272,"byte_end":49341,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49346,"byte_end":49349,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49354,"byte_end":49368,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49373,"byte_end":49376,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49381,"byte_end":49417,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49422,"byte_end":49425,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49430,"byte_end":49437,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49442,"byte_end":49475,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49480,"byte_end":49519,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49524,"byte_end":49568,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49573,"byte_end":49576,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49581,"byte_end":49635,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49640,"byte_end":49677,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49682,"byte_end":49696,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49701,"byte_end":49738,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49743,"byte_end":49828,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49833,"byte_end":49860,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49865,"byte_end":49878,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49883,"byte_end":49910,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49915,"byte_end":49924,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49929,"byte_end":49934,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49939,"byte_end":49942,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49947,"byte_end":49979,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":49984,"byte_end":50020,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50025,"byte_end":50060,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50065,"byte_end":50072,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50077,"byte_end":50086,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52161,"byte_end":52167,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50506,"byte_end":50539,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50544,"byte_end":50547,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50552,"byte_end":50640,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50645,"byte_end":50648,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50653,"byte_end":50744,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50749,"byte_end":50808,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50813,"byte_end":50816,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50821,"byte_end":50892,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50897,"byte_end":50900,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":50905,"byte_end":50996,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51001,"byte_end":51082,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51087,"byte_end":51090,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51095,"byte_end":51122,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51127,"byte_end":51170,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51175,"byte_end":51178,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51183,"byte_end":51197,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51202,"byte_end":51205,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51210,"byte_end":51261,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51266,"byte_end":51269,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51274,"byte_end":51281,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51286,"byte_end":51319,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51324,"byte_end":51347,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51352,"byte_end":51390,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51395,"byte_end":51439,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51444,"byte_end":51464,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51469,"byte_end":51497,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51502,"byte_end":51505,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51510,"byte_end":51548,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51553,"byte_end":51590,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51595,"byte_end":51630,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51635,"byte_end":51664,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51669,"byte_end":51678,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51683,"byte_end":51688,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51693,"byte_end":51696,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51701,"byte_end":51750,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51755,"byte_end":51786,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51791,"byte_end":51794,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51799,"byte_end":51826,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51831,"byte_end":51881,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51886,"byte_end":51921,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51926,"byte_end":51933,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51938,"byte_end":51941,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51946,"byte_end":51988,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":51993,"byte_end":52015,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52020,"byte_end":52061,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52066,"byte_end":52073,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52078,"byte_end":52081,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52086,"byte_end":52135,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":52140,"byte_end":52149,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54384,"byte_end":54396,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53057,"byte_end":53148,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53153,"byte_end":53156,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53161,"byte_end":53175,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53180,"byte_end":53183,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53188,"byte_end":53280,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53285,"byte_end":53288,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53293,"byte_end":53300,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53305,"byte_end":53338,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53343,"byte_end":53366,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53371,"byte_end":53409,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53414,"byte_end":53458,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53463,"byte_end":53483,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53488,"byte_end":53516,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53521,"byte_end":53524,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53529,"byte_end":53571,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53576,"byte_end":53613,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53618,"byte_end":53653,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53658,"byte_end":53697,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53702,"byte_end":53733,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53738,"byte_end":53758,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53763,"byte_end":53796,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53801,"byte_end":53814,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53819,"byte_end":53828,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53833,"byte_end":53838,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53843,"byte_end":53846,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53851,"byte_end":53900,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53905,"byte_end":53936,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53941,"byte_end":53976,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53981,"byte_end":53984,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":53989,"byte_end":54016,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54021,"byte_end":54071,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54076,"byte_end":54111,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54116,"byte_end":54140,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54145,"byte_end":54152,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54157,"byte_end":54160,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54165,"byte_end":54207,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54212,"byte_end":54238,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54243,"byte_end":54284,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54289,"byte_end":54296,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54301,"byte_end":54304,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54309,"byte_end":54358,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54363,"byte_end":54372,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":397},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":466},{"krate":0,"index":629},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139261,"byte_end":12139299,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139300,"byte_end":12139303,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139304,"byte_end":12139349,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139350,"byte_end":12139429,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/mod.rs","byte_start":12139430,"byte_end":12139510,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141436,"byte_end":12141442,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140006,"byte_end":12140037,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140038,"byte_end":12140041,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140042,"byte_end":12140129,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140130,"byte_end":12140133,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140134,"byte_end":12140228,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140229,"byte_end":12140283,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140284,"byte_end":12140287,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140288,"byte_end":12140385,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140386,"byte_end":12140417,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140418,"byte_end":12140421,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140422,"byte_end":12140520,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140521,"byte_end":12140616,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140617,"byte_end":12140645,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140646,"byte_end":12140649,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140650,"byte_end":12140748,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140749,"byte_end":12140777,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140778,"byte_end":12140781,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140782,"byte_end":12140796,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140797,"byte_end":12140800,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140801,"byte_end":12140808,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140809,"byte_end":12140829,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140830,"byte_end":12140858,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140859,"byte_end":12140897,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140898,"byte_end":12140901,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140902,"byte_end":12140928,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140929,"byte_end":12140962,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140963,"byte_end":12140966,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12140967,"byte_end":12140999,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141000,"byte_end":12141015,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141016,"byte_end":12141067,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141068,"byte_end":12141081,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141082,"byte_end":12141085,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141086,"byte_end":12141113,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141114,"byte_end":12141164,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141165,"byte_end":12141184,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141185,"byte_end":12141192,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141193,"byte_end":12141196,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141197,"byte_end":12141250,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141251,"byte_end":12141264,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141265,"byte_end":12141272,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141273,"byte_end":12141276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141277,"byte_end":12141303,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141304,"byte_end":12141346,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141347,"byte_end":12141391,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141392,"byte_end":12141424,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142112,"byte_end":12142115,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141924,"byte_end":12141951,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141956,"byte_end":12141959,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141964,"byte_end":12141978,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141983,"byte_end":12141986,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141991,"byte_end":12141998,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142003,"byte_end":12142041,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142046,"byte_end":12142049,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142054,"byte_end":12142080,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142085,"byte_end":12142092,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142097,"byte_end":12142100,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142567,"byte_end":12142571,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142165,"byte_end":12142229,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142234,"byte_end":12142237,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142242,"byte_end":12142256,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142261,"byte_end":12142264,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142269,"byte_end":12142276,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142281,"byte_end":12142319,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142324,"byte_end":12142327,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142332,"byte_end":12142358,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142363,"byte_end":12142396,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142401,"byte_end":12142404,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142409,"byte_end":12142441,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142446,"byte_end":12142461,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142466,"byte_end":12142469,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142474,"byte_end":12142525,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142530,"byte_end":12142543,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142548,"byte_end":12142555,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143061,"byte_end":12143073,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142632,"byte_end":12142725,"line_start":110,"line_end":110,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142730,"byte_end":12142733,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142738,"byte_end":12142752,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142757,"byte_end":12142760,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142765,"byte_end":12142772,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142777,"byte_end":12142805,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142810,"byte_end":12142848,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142853,"byte_end":12142856,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142861,"byte_end":12142887,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142892,"byte_end":12142895,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142900,"byte_end":12142985,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12142990,"byte_end":12143037,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143042,"byte_end":12143049,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143657,"byte_end":12143670,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"pub fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143166,"byte_end":12143259,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143264,"byte_end":12143267,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143272,"byte_end":12143286,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143291,"byte_end":12143294,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143299,"byte_end":12143306,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143311,"byte_end":12143350,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143355,"byte_end":12143393,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143398,"byte_end":12143401,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143406,"byte_end":12143432,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143437,"byte_end":12143500,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143505,"byte_end":12143508,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143513,"byte_end":12143598,"line_start":138,"line_end":138,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143603,"byte_end":12143633,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143638,"byte_end":12143645,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144333,"byte_end":12144341,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143759,"byte_end":12143813,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143818,"byte_end":12143821,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143826,"byte_end":12143917,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143922,"byte_end":12143925,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143930,"byte_end":12143944,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143949,"byte_end":12143952,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143957,"byte_end":12143964,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12143969,"byte_end":12144007,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144012,"byte_end":12144015,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144020,"byte_end":12144046,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144051,"byte_end":12144084,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144089,"byte_end":12144092,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144097,"byte_end":12144129,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144134,"byte_end":12144149,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144154,"byte_end":12144205,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144210,"byte_end":12144223,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144228,"byte_end":12144235,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144240,"byte_end":12144243,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144248,"byte_end":12144274,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144279,"byte_end":12144321,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144633,"byte_end":12144641,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"pub fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144398,"byte_end":12144441,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144446,"byte_end":12144449,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144454,"byte_end":12144468,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144473,"byte_end":12144476,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144481,"byte_end":12144488,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144493,"byte_end":12144531,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144536,"byte_end":12144539,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144544,"byte_end":12144570,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144575,"byte_end":12144609,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144614,"byte_end":12144621,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145137,"byte_end":12145145,"line_start":198,"line_end":198,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144724,"byte_end":12144767,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144772,"byte_end":12144775,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144780,"byte_end":12144792,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144797,"byte_end":12144800,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144805,"byte_end":12144888,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144893,"byte_end":12144896,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144901,"byte_end":12144915,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144920,"byte_end":12144923,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144928,"byte_end":12144935,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144940,"byte_end":12144978,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144983,"byte_end":12144986,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12144991,"byte_end":12145017,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145022,"byte_end":12145056,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145061,"byte_end":12145106,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145111,"byte_end":12145118,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145492,"byte_end":12145500,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":445}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145423,"byte_end":12145480,"line_start":212,"line_end":212,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146346,"byte_end":12146352,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145616,"byte_end":12145678,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145683,"byte_end":12145686,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145691,"byte_end":12145783,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145788,"byte_end":12145796,"line_start":224,"line_end":224,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145801,"byte_end":12145804,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145809,"byte_end":12145823,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145828,"byte_end":12145831,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145836,"byte_end":12145843,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145848,"byte_end":12145868,"line_start":229,"line_end":229,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145873,"byte_end":12145901,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145906,"byte_end":12145944,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145949,"byte_end":12145952,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145957,"byte_end":12145983,"line_start":233,"line_end":233,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145988,"byte_end":12146021,"line_start":234,"line_end":234,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146026,"byte_end":12146029,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146034,"byte_end":12146061,"line_start":236,"line_end":236,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146066,"byte_end":12146116,"line_start":237,"line_end":237,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146121,"byte_end":12146140,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146145,"byte_end":12146152,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146157,"byte_end":12146160,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146165,"byte_end":12146218,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146223,"byte_end":12146236,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146241,"byte_end":12146248,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146253,"byte_end":12146256,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146261,"byte_end":12146287,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146292,"byte_end":12146334,"line_start":246,"line_end":246,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146691,"byte_end":12146699,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"pub fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146401,"byte_end":12146447,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146452,"byte_end":12146455,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146460,"byte_end":12146474,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146479,"byte_end":12146482,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146487,"byte_end":12146494,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146499,"byte_end":12146549,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146554,"byte_end":12146557,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146562,"byte_end":12146588,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146593,"byte_end":12146626,"line_start":259,"line_end":259,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146631,"byte_end":12146667,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146672,"byte_end":12146679,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147269,"byte_end":12147277,"line_start":283,"line_end":283,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146789,"byte_end":12146835,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146840,"byte_end":12146843,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146848,"byte_end":12146860,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146865,"byte_end":12146868,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146873,"byte_end":12146958,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146963,"byte_end":12146966,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146971,"byte_end":12146985,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146990,"byte_end":12146993,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12146998,"byte_end":12147005,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147010,"byte_end":12147060,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147065,"byte_end":12147068,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147073,"byte_end":12147099,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147104,"byte_end":12147137,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147142,"byte_end":12147145,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147150,"byte_end":12147186,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147191,"byte_end":12147238,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147243,"byte_end":12147250,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154991,"byte_end":12155002,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153240,"byte_end":12153273,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153274,"byte_end":12153277,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153278,"byte_end":12153375,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153376,"byte_end":12153391,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153392,"byte_end":12153395,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153396,"byte_end":12153493,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153494,"byte_end":12153592,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153593,"byte_end":12153665,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153666,"byte_end":12153669,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153670,"byte_end":12153761,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153762,"byte_end":12153861,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153862,"byte_end":12153940,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153941,"byte_end":12153944,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12153945,"byte_end":12154030,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154031,"byte_end":12154124,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154125,"byte_end":12154128,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154129,"byte_end":12154144,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154145,"byte_end":12154148,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154149,"byte_end":12154244,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154245,"byte_end":12154340,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154341,"byte_end":12154391,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154392,"byte_end":12154395,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154396,"byte_end":12154410,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154411,"byte_end":12154414,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154415,"byte_end":12154422,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154423,"byte_end":12154466,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154467,"byte_end":12154470,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154471,"byte_end":12154506,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154507,"byte_end":12154510,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154511,"byte_end":12154563,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154564,"byte_end":12154569,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154570,"byte_end":12154608,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154609,"byte_end":12154647,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154648,"byte_end":12154675,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154676,"byte_end":12154703,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154704,"byte_end":12154750,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154751,"byte_end":12154754,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154755,"byte_end":12154803,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154804,"byte_end":12154809,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154810,"byte_end":12154852,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154853,"byte_end":12154869,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154870,"byte_end":12154896,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154897,"byte_end":12154933,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154934,"byte_end":12154941,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154942,"byte_end":12154945,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12154946,"byte_end":12154979,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155631,"byte_end":12155634,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155419,"byte_end":12155464,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155469,"byte_end":12155472,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155477,"byte_end":12155491,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155496,"byte_end":12155499,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155504,"byte_end":12155511,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155516,"byte_end":12155559,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155564,"byte_end":12155567,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155572,"byte_end":12155607,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155612,"byte_end":12155619,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156607,"byte_end":12156617,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156048,"byte_end":12156102,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156107,"byte_end":12156110,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156115,"byte_end":12156127,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156132,"byte_end":12156135,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156140,"byte_end":12156235,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156240,"byte_end":12156261,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156266,"byte_end":12156269,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156274,"byte_end":12156288,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156293,"byte_end":12156296,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156301,"byte_end":12156308,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156313,"byte_end":12156356,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156361,"byte_end":12156364,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156369,"byte_end":12156416,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156421,"byte_end":12156426,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156431,"byte_end":12156473,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156478,"byte_end":12156513,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156518,"byte_end":12156523,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156528,"byte_end":12156583,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156588,"byte_end":12156595,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157594,"byte_end":12157605,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156896,"byte_end":12156939,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156944,"byte_end":12156947,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156952,"byte_end":12157046,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157051,"byte_end":12157119,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157124,"byte_end":12157127,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157132,"byte_end":12157146,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157151,"byte_end":12157154,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157159,"byte_end":12157166,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157171,"byte_end":12157214,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157219,"byte_end":12157242,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157247,"byte_end":12157267,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157272,"byte_end":12157275,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157280,"byte_end":12157325,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157330,"byte_end":12157360,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157365,"byte_end":12157368,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157373,"byte_end":12157408,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157413,"byte_end":12157457,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157462,"byte_end":12157505,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157510,"byte_end":12157524,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157529,"byte_end":12157570,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157575,"byte_end":12157582,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158244,"byte_end":12158251,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157676,"byte_end":12157731,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157736,"byte_end":12157739,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157744,"byte_end":12157828,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157833,"byte_end":12157836,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157841,"byte_end":12157853,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157858,"byte_end":12157861,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157866,"byte_end":12157961,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157966,"byte_end":12157987,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12157992,"byte_end":12157995,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158000,"byte_end":12158014,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158019,"byte_end":12158022,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158027,"byte_end":12158034,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158039,"byte_end":12158082,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158087,"byte_end":12158090,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158095,"byte_end":12158134,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158139,"byte_end":12158173,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158178,"byte_end":12158220,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158225,"byte_end":12158232,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159371,"byte_end":12159379,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158515,"byte_end":12158573,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158578,"byte_end":12158581,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158586,"byte_end":12158679,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158684,"byte_end":12158777,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158782,"byte_end":12158871,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158876,"byte_end":12158916,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158921,"byte_end":12158924,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158929,"byte_end":12158941,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158946,"byte_end":12158949,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12158954,"byte_end":12159049,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159054,"byte_end":12159075,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159080,"byte_end":12159083,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159088,"byte_end":12159102,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159107,"byte_end":12159110,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159115,"byte_end":12159122,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159127,"byte_end":12159170,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159175,"byte_end":12159178,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159183,"byte_end":12159218,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159223,"byte_end":12159226,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159231,"byte_end":12159258,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159263,"byte_end":12159298,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159303,"byte_end":12159336,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159341,"byte_end":12159347,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12159352,"byte_end":12159359,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161680,"byte_end":12161684,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160398,"byte_end":12160486,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160491,"byte_end":12160494,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160499,"byte_end":12160590,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160595,"byte_end":12160689,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160694,"byte_end":12160789,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160794,"byte_end":12160837,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160842,"byte_end":12160845,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160850,"byte_end":12160920,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160925,"byte_end":12160928,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160933,"byte_end":12160945,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160950,"byte_end":12160953,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12160958,"byte_end":12161053,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161058,"byte_end":12161079,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161084,"byte_end":12161087,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161092,"byte_end":12161104,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161109,"byte_end":12161112,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161117,"byte_end":12161207,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161212,"byte_end":12161215,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161220,"byte_end":12161234,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161239,"byte_end":12161242,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161247,"byte_end":12161254,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161259,"byte_end":12161302,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161307,"byte_end":12161330,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161335,"byte_end":12161355,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161360,"byte_end":12161363,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161368,"byte_end":12161413,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161418,"byte_end":12161448,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161453,"byte_end":12161456,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161461,"byte_end":12161494,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161499,"byte_end":12161521,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161526,"byte_end":12161529,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161534,"byte_end":12161561,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161566,"byte_end":12161596,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161601,"byte_end":12161628,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161633,"byte_end":12161656,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12161661,"byte_end":12161668,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163349,"byte_end":12163358,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162490,"byte_end":12162552,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162557,"byte_end":12162560,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162565,"byte_end":12162658,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162663,"byte_end":12162755,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162760,"byte_end":12162853,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162858,"byte_end":12162898,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162903,"byte_end":12162906,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162911,"byte_end":12162923,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162928,"byte_end":12162931,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12162936,"byte_end":12163031,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163036,"byte_end":12163057,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163062,"byte_end":12163065,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163070,"byte_end":12163084,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163089,"byte_end":12163092,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163097,"byte_end":12163104,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163109,"byte_end":12163152,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163157,"byte_end":12163160,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163165,"byte_end":12163200,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163205,"byte_end":12163208,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163213,"byte_end":12163246,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163251,"byte_end":12163273,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163278,"byte_end":12163281,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163286,"byte_end":12163325,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12163330,"byte_end":12163337,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166146,"byte_end":12166151,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165045,"byte_end":12165137,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165142,"byte_end":12165145,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165150,"byte_end":12165241,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165246,"byte_end":12165340,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165345,"byte_end":12165440,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165445,"byte_end":12165488,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165493,"byte_end":12165496,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165501,"byte_end":12165574,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165579,"byte_end":12165582,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165587,"byte_end":12165599,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165604,"byte_end":12165607,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165612,"byte_end":12165707,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165712,"byte_end":12165733,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165738,"byte_end":12165741,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165746,"byte_end":12165758,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165763,"byte_end":12165766,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165771,"byte_end":12165861,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165866,"byte_end":12165869,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165874,"byte_end":12165888,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165893,"byte_end":12165896,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165901,"byte_end":12165908,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165913,"byte_end":12165956,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165961,"byte_end":12165964,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12165969,"byte_end":12166004,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166009,"byte_end":12166012,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166017,"byte_end":12166055,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166060,"byte_end":12166071,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166076,"byte_end":12166079,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166084,"byte_end":12166122,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12166127,"byte_end":12166134,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168485,"byte_end":12168505,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168388,"byte_end":12168473,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169392,"byte_end":12169413,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169291,"byte_end":12169380,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":643},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174015,"byte_end":12174024,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":644}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172803,"byte_end":12172879,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172880,"byte_end":12172883,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172884,"byte_end":12172913,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172914,"byte_end":12172917,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172918,"byte_end":12172998,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12172999,"byte_end":12173002,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173003,"byte_end":12173104,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173105,"byte_end":12173133,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173134,"byte_end":12173137,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173138,"byte_end":12173233,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173234,"byte_end":12173271,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173272,"byte_end":12173275,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173276,"byte_end":12173376,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173377,"byte_end":12173448,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173449,"byte_end":12173452,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173453,"byte_end":12173467,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173468,"byte_end":12173471,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173472,"byte_end":12173479,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173480,"byte_end":12173521,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173522,"byte_end":12173542,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173543,"byte_end":12173546,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173547,"byte_end":12173578,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173579,"byte_end":12173609,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173610,"byte_end":12173613,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173614,"byte_end":12173633,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173634,"byte_end":12173688,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173689,"byte_end":12173717,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173718,"byte_end":12173721,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173722,"byte_end":12173753,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173754,"byte_end":12173782,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173783,"byte_end":12173786,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173787,"byte_end":12173839,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173840,"byte_end":12173861,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173862,"byte_end":12173873,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173874,"byte_end":12173879,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173880,"byte_end":12173883,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173884,"byte_end":12173940,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173941,"byte_end":12173955,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173956,"byte_end":12173963,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173964,"byte_end":12173967,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12173968,"byte_end":12174003,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174616,"byte_end":12174619,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174388,"byte_end":12174456,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174461,"byte_end":12174464,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174469,"byte_end":12174483,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174488,"byte_end":12174491,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174496,"byte_end":12174503,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174508,"byte_end":12174549,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174554,"byte_end":12174557,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174562,"byte_end":12174592,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174597,"byte_end":12174604,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175219,"byte_end":12175223,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174667,"byte_end":12174741,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174746,"byte_end":12174749,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174754,"byte_end":12174768,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174773,"byte_end":12174776,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174781,"byte_end":12174788,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174793,"byte_end":12174834,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174839,"byte_end":12174859,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174864,"byte_end":12174867,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174872,"byte_end":12174902,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174907,"byte_end":12174910,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174915,"byte_end":12174934,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174939,"byte_end":12174967,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174972,"byte_end":12174989,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174994,"byte_end":12175056,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175061,"byte_end":12175083,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175088,"byte_end":12175097,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175102,"byte_end":12175109,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175114,"byte_end":12175117,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175122,"byte_end":12175176,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175181,"byte_end":12175195,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175200,"byte_end":12175207,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":679},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":736},{"krate":0,"index":771},{"krate":0,"index":776},{"krate":0,"index":738},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":759},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":764}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176200,"byte_end":12176253,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176254,"byte_end":12176257,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176258,"byte_end":12176336,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176337,"byte_end":12176340,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176341,"byte_end":12176348,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176349,"byte_end":12176381,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176382,"byte_end":12176385,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176386,"byte_end":12176408,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176409,"byte_end":12176437,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176438,"byte_end":12176464,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176465,"byte_end":12176493,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176494,"byte_end":12176500,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176501,"byte_end":12176504,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176505,"byte_end":12176528,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176529,"byte_end":12176560,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176561,"byte_end":12176591,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176592,"byte_end":12176639,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176640,"byte_end":12176655,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176656,"byte_end":12176665,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176666,"byte_end":12176682,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176683,"byte_end":12176690,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176691,"byte_end":12176694,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176695,"byte_end":12176720,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176721,"byte_end":12176724,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176725,"byte_end":12176800,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176801,"byte_end":12176804,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176805,"byte_end":12176830,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176831,"byte_end":12176851,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176852,"byte_end":12176855,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176856,"byte_end":12176878,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176879,"byte_end":12176907,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176908,"byte_end":12176934,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176935,"byte_end":12176963,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176964,"byte_end":12176970,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176971,"byte_end":12176974,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12176975,"byte_end":12177008,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177009,"byte_end":12177012,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177013,"byte_end":12177040,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177041,"byte_end":12177085,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177086,"byte_end":12177129,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177130,"byte_end":12177142,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177143,"byte_end":12177148,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177149,"byte_end":12177152,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177153,"byte_end":12177180,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177181,"byte_end":12177212,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177213,"byte_end":12177218,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177219,"byte_end":12177226,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177227,"byte_end":12177230,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177231,"byte_end":12177328,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177329,"byte_end":12177332,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177333,"byte_end":12177344,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177345,"byte_end":12177397,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177398,"byte_end":12177425,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177426,"byte_end":12177434,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177435,"byte_end":12177471,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177472,"byte_end":12177547,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177548,"byte_end":12177555,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177556,"byte_end":12177566,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177567,"byte_end":12177614,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177615,"byte_end":12177623,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177624,"byte_end":12177694,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177695,"byte_end":12177702,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177703,"byte_end":12177706,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177707,"byte_end":12177804,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177805,"byte_end":12177884,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177885,"byte_end":12177888,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177889,"byte_end":12177988,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12177989,"byte_end":12178015,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178016,"byte_end":12178019,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178020,"byte_end":12178049,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178050,"byte_end":12178053,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178054,"byte_end":12178144,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178145,"byte_end":12178239,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178240,"byte_end":12178335,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178336,"byte_end":12178339,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178340,"byte_end":12178435,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178436,"byte_end":12178534,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178535,"byte_end":12178633,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178634,"byte_end":12178677,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178678,"byte_end":12178681,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178682,"byte_end":12178710,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178711,"byte_end":12178714,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178715,"byte_end":12178810,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178811,"byte_end":12178905,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178906,"byte_end":12178947,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178948,"byte_end":12178951,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178952,"byte_end":12178983,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12178984,"byte_end":12179016,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179017,"byte_end":12179020,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179021,"byte_end":12179044,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179045,"byte_end":12179066,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179067,"byte_end":12179138,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179139,"byte_end":12179188,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179189,"byte_end":12179240,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179241,"byte_end":12179252,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179253,"byte_end":12179260,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179261,"byte_end":12179268,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179269,"byte_end":12179272,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179273,"byte_end":12179371,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179372,"byte_end":12179432,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179433,"byte_end":12179436,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179437,"byte_end":12179444,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179445,"byte_end":12179477,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179478,"byte_end":12179481,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179482,"byte_end":12179505,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179506,"byte_end":12179537,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179538,"byte_end":12179559,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179560,"byte_end":12179635,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179636,"byte_end":12179687,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179688,"byte_end":12179699,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179700,"byte_end":12179716,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179717,"byte_end":12179724,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180647,"byte_end":12180652,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12179996,"byte_end":12180041,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180042,"byte_end":12180045,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180046,"byte_end":12180142,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180143,"byte_end":12180236,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180237,"byte_end":12180334,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180335,"byte_end":12180388,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180389,"byte_end":12180392,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180393,"byte_end":12180407,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180408,"byte_end":12180411,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180412,"byte_end":12180419,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180420,"byte_end":12180452,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180453,"byte_end":12180456,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180457,"byte_end":12180485,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180486,"byte_end":12180489,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180490,"byte_end":12180513,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180514,"byte_end":12180535,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180536,"byte_end":12180602,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180603,"byte_end":12180614,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180615,"byte_end":12180631,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12180632,"byte_end":12180639,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12181962,"byte_end":12181967,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12181917,"byte_end":12181950,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183753,"byte_end":12183758,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182332,"byte_end":12182359,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182364,"byte_end":12182367,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182372,"byte_end":12182467,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182472,"byte_end":12182567,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182572,"byte_end":12182629,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182634,"byte_end":12182637,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182642,"byte_end":12182737,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182742,"byte_end":12182770,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182775,"byte_end":12182778,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182783,"byte_end":12182850,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182855,"byte_end":12182924,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182929,"byte_end":12182932,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182937,"byte_end":12183046,"line_start":219,"line_end":219,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183051,"byte_end":12183114,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183119,"byte_end":12183122,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183127,"byte_end":12183160,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183165,"byte_end":12183168,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183173,"byte_end":12183185,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183190,"byte_end":12183193,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183198,"byte_end":12183279,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183284,"byte_end":12183316,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183321,"byte_end":12183324,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183329,"byte_end":12183343,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183348,"byte_end":12183351,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183356,"byte_end":12183363,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183368,"byte_end":12183400,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183405,"byte_end":12183408,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183413,"byte_end":12183436,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183441,"byte_end":12183475,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183480,"byte_end":12183530,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183535,"byte_end":12183549,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183554,"byte_end":12183565,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183570,"byte_end":12183573,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183578,"byte_end":12183629,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183634,"byte_end":12183675,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183680,"byte_end":12183708,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183713,"byte_end":12183729,"line_start":243,"line_end":243,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12183734,"byte_end":12183741,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184383,"byte_end":12184390,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184035,"byte_end":12184101,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184106,"byte_end":12184109,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184114,"byte_end":12184128,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184133,"byte_end":12184136,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184141,"byte_end":12184148,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184153,"byte_end":12184185,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184190,"byte_end":12184193,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184198,"byte_end":12184221,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184226,"byte_end":12184245,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184250,"byte_end":12184311,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184316,"byte_end":12184338,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184343,"byte_end":12184359,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184364,"byte_end":12184371,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185833,"byte_end":12185852,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184705,"byte_end":12184751,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184752,"byte_end":12184755,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184756,"byte_end":12184796,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184797,"byte_end":12184800,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184801,"byte_end":12184879,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184880,"byte_end":12184964,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184965,"byte_end":12184968,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184969,"byte_end":12185064,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185065,"byte_end":12185112,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185113,"byte_end":12185116,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185117,"byte_end":12185213,"line_start":293,"line_end":293,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185214,"byte_end":12185309,"line_start":294,"line_end":294,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185310,"byte_end":12185321,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185322,"byte_end":12185325,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185326,"byte_end":12185340,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185341,"byte_end":12185344,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185345,"byte_end":12185352,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185353,"byte_end":12185385,"line_start":300,"line_end":300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185386,"byte_end":12185389,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185390,"byte_end":12185413,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185414,"byte_end":12185433,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185434,"byte_end":12185492,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185493,"byte_end":12185515,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185516,"byte_end":12185532,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185533,"byte_end":12185540,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185541,"byte_end":12185544,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185545,"byte_end":12185584,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185585,"byte_end":12185636,"line_start":310,"line_end":310,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185637,"byte_end":12185678,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185679,"byte_end":12185714,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185715,"byte_end":12185763,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185764,"byte_end":12185804,"line_start":314,"line_end":314,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186611,"byte_end":12186615,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185993,"byte_end":12186030,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186035,"byte_end":12186038,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186043,"byte_end":12186091,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186096,"byte_end":12186099,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186104,"byte_end":12186177,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186182,"byte_end":12186185,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186190,"byte_end":12186204,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186209,"byte_end":12186212,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186217,"byte_end":12186224,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186229,"byte_end":12186261,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186266,"byte_end":12186295,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186300,"byte_end":12186303,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186308,"byte_end":12186331,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186336,"byte_end":12186355,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186360,"byte_end":12186402,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186407,"byte_end":12186478,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186483,"byte_end":12186505,"line_start":338,"line_end":338,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186510,"byte_end":12186526,"line_start":339,"line_end":339,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186531,"byte_end":12186538,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186543,"byte_end":12186546,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186551,"byte_end":12186599,"line_start":342,"line_end":342,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187320,"byte_end":12187330,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186751,"byte_end":12186801,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186806,"byte_end":12186809,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186814,"byte_end":12186854,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186859,"byte_end":12186862,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186867,"byte_end":12186949,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186954,"byte_end":12186957,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186962,"byte_end":12186976,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186981,"byte_end":12186984,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12186989,"byte_end":12186996,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187001,"byte_end":12187033,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187038,"byte_end":12187041,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187046,"byte_end":12187069,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187074,"byte_end":12187093,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187098,"byte_end":12187132,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187137,"byte_end":12187195,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187200,"byte_end":12187222,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187227,"byte_end":12187243,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187248,"byte_end":12187255,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187260,"byte_end":12187263,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187268,"byte_end":12187308,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188606,"byte_end":12188611,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187471,"byte_end":12187522,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187527,"byte_end":12187530,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187535,"byte_end":12187630,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187635,"byte_end":12187663,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187668,"byte_end":12187671,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187676,"byte_end":12187763,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187768,"byte_end":12187771,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187776,"byte_end":12187788,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187793,"byte_end":12187796,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187801,"byte_end":12187862,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187867,"byte_end":12187932,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187937,"byte_end":12187954,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187959,"byte_end":12187962,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12187967,"byte_end":12188002,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188007,"byte_end":12188010,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188015,"byte_end":12188027,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188032,"byte_end":12188035,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188040,"byte_end":12188104,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188109,"byte_end":12188112,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188117,"byte_end":12188131,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188136,"byte_end":12188139,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188144,"byte_end":12188151,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188156,"byte_end":12188188,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188193,"byte_end":12188196,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188201,"byte_end":12188224,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188229,"byte_end":12188261,"line_start":398,"line_end":398,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188266,"byte_end":12188290,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188295,"byte_end":12188349,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188354,"byte_end":12188372,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188377,"byte_end":12188391,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188396,"byte_end":12188418,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188423,"byte_end":12188426,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188431,"byte_end":12188482,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188487,"byte_end":12188528,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188533,"byte_end":12188561,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188566,"byte_end":12188582,"line_start":408,"line_end":408,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12188587,"byte_end":12188594,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190904,"byte_end":12190920,"line_start":476,"line_end":476,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190723,"byte_end":12190779,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190780,"byte_end":12190783,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190784,"byte_end":12190849,"line_start":474,"line_end":474,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190850,"byte_end":12190892,"line_start":475,"line_end":475,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192228,"byte_end":12192232,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191316,"byte_end":12191374,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191379,"byte_end":12191382,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191387,"byte_end":12191440,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191445,"byte_end":12191448,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191453,"byte_end":12191465,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191470,"byte_end":12191473,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191478,"byte_end":12191572,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191577,"byte_end":12191624,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191629,"byte_end":12191632,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191637,"byte_end":12191651,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191656,"byte_end":12191659,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191664,"byte_end":12191671,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191676,"byte_end":12191708,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191713,"byte_end":12191716,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191721,"byte_end":12191744,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191749,"byte_end":12191818,"line_start":506,"line_end":506,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191823,"byte_end":12191888,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191893,"byte_end":12191896,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191901,"byte_end":12191963,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191968,"byte_end":12192001,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192006,"byte_end":12192035,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192040,"byte_end":12192043,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192048,"byte_end":12192110,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192115,"byte_end":12192148,"line_start":514,"line_end":514,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192153,"byte_end":12192183,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192188,"byte_end":12192204,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192209,"byte_end":12192216,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12193041,"byte_end":12193047,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192680,"byte_end":12192726,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192731,"byte_end":12192734,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192739,"byte_end":12192753,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192758,"byte_end":12192761,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192766,"byte_end":12192773,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192778,"byte_end":12192810,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192815,"byte_end":12192818,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192823,"byte_end":12192846,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192851,"byte_end":12192923,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12192928,"byte_end":12192996,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12193001,"byte_end":12193017,"line_start":539,"line_end":539,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12193022,"byte_end":12193029,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12136640,"byte_end":12136647,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12138292,"byte_end":12138309,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12138634,"byte_end":12138651,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22813,"byte_end":22823,"line_start":559,"line_end":559,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24664,"byte_end":24674,"line_start":624,"line_end":624,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24783,"byte_end":24793,"line_start":630,"line_end":630,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24932,"byte_end":24942,"line_start":637,"line_end":637,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":29700,"byte_end":29710,"line_start":797,"line_end":797,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":39777,"byte_end":39786,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44889,"byte_end":44900,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44937,"byte_end":44948,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44964,"byte_end":44975,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45641,"byte_end":45652,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45758,"byte_end":45769,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45883,"byte_end":45894,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":46093,"byte_end":46104,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48553,"byte_end":48560,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54481,"byte_end":54488,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54732,"byte_end":54739,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141530,"byte_end":12141536,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141558,"byte_end":12141564,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141911,"byte_end":12141917,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145311,"byte_end":12145317,"line_start":206,"line_end":206,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145550,"byte_end":12145558,"line_start":217,"line_end":217,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145583,"byte_end":12145591,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145601,"byte_end":12145609,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147421,"byte_end":12147429,"line_start":290,"line_end":290,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147552,"byte_end":12147560,"line_start":296,"line_end":296,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147838,"byte_end":12147843,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155205,"byte_end":12155216,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155269,"byte_end":12155280,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155319,"byte_end":12155330,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155371,"byte_end":12155382,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155398,"byte_end":12155409,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156875,"byte_end":12156886,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12167249,"byte_end":12167260,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12167798,"byte_end":12167815,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168178,"byte_end":12168189,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168306,"byte_end":12168317,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168682,"byte_end":12168702,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168740,"byte_end":12168760,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168907,"byte_end":12168927,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169165,"byte_end":12169185,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169554,"byte_end":12169575,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169612,"byte_end":12169633,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170017,"byte_end":12170038,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170277,"byte_end":12170298,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170430,"byte_end":12170451,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170592,"byte_end":12170613,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12171911,"byte_end":12171923,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174166,"byte_end":12174175,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174372,"byte_end":12174381,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175542,"byte_end":12175551,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175760,"byte_end":12175769,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175985,"byte_end":12175994,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182289,"byte_end":12182294,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182314,"byte_end":12182319,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184591,"byte_end":12184596,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185953,"byte_end":12185972,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190644,"byte_end":12190660,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190695,"byte_end":12190711,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191286,"byte_end":12191302,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12193237,"byte_end":12193253,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12194464,"byte_end":12194480,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":397}},{"kind":"Mod","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":679}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12136640,"byte_end":12136647,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12138292,"byte_end":12138309,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/seq_lock.rs","byte_start":12138634,"byte_end":12138651,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":270},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":6542}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":6543}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":22813,"byte_end":22823,"line_start":559,"line_end":559,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24664,"byte_end":24674,"line_start":624,"line_end":624,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24783,"byte_end":24793,"line_start":630,"line_end":630,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":24932,"byte_end":24942,"line_start":637,"line_end":637,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/atomic_cell.rs","byte_start":29700,"byte_end":29710,"line_start":797,"line_end":797,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/atomic/consume.rs","byte_start":39777,"byte_end":39786,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":8505},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44889,"byte_end":44900,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44937,"byte_end":44948,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":44964,"byte_end":44975,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45641,"byte_end":45652,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45758,"byte_end":45769,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":45883,"byte_end":45894,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/cache_padded.rs","byte_start":46093,"byte_end":46104,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":48553,"byte_end":48560,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54481,"byte_end":54488,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/backoff.rs","byte_start":54732,"byte_end":54739,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":228},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141530,"byte_end":12141536,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141558,"byte_end":12141564,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12141911,"byte_end":12141917,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145311,"byte_end":12145317,"line_start":206,"line_end":206,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145550,"byte_end":12145558,"line_start":217,"line_end":217,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145583,"byte_end":12145591,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12145601,"byte_end":12145609,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147421,"byte_end":12147429,"line_start":290,"line_end":290,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147552,"byte_end":12147560,"line_start":296,"line_end":296,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/parker.rs","byte_start":12147838,"byte_end":12147843,"line_start":314,"line_end":314,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155205,"byte_end":12155216,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155269,"byte_end":12155280,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155319,"byte_end":12155330,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":539},"to":{"krate":1,"index":6542}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155371,"byte_end":12155382,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":539},"to":{"krate":1,"index":6543}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12155398,"byte_end":12155409,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12156875,"byte_end":12156886,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12167249,"byte_end":12167260,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12167798,"byte_end":12167815,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168178,"byte_end":12168189,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168306,"byte_end":12168317,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":539},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168682,"byte_end":12168702,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168740,"byte_end":12168760,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12168907,"byte_end":12168927,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169165,"byte_end":12169185,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":577},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169554,"byte_end":12169575,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12169612,"byte_end":12169633,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170017,"byte_end":12170038,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170277,"byte_end":12170298,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":8969}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170430,"byte_end":12170451,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12170592,"byte_end":12170613,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/sharded_lock.rs","byte_start":12171911,"byte_end":12171923,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174166,"byte_end":12174175,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12174372,"byte_end":12174381,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175542,"byte_end":12175551,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175760,"byte_end":12175769,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/sync/wait_group.rs","byte_start":12175985,"byte_end":12175994,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182289,"byte_end":12182294,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12182314,"byte_end":12182319,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12184591,"byte_end":12184596,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12185953,"byte_end":12185972,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190644,"byte_end":12190660,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12190695,"byte_end":12190711,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12191286,"byte_end":12191302,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12193237,"byte_end":12193253,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":752},"to":{"krate":1,"index":6348}},{"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.5/src/thread.rs","byte_start":12194464,"byte_end":12194480,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":8962}}]}