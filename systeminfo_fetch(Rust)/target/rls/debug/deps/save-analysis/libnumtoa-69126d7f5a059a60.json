{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0","program":"/home/voidxe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","numtoa","/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=69126d7f5a059a60","-C","extra-filename=-69126d7f5a059a60","--out-dir","/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps","-L","dependency=/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/voidxe/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/voidxe/Desktop/hacktoberfest21/systeminfo_fetch/target/rls/debug/deps/libnumtoa-69126d7f5a059a60.rmeta"},"prelude":{"crate_id":{"name":"numtoa","disambiguator":[549236479959279301,0]},"crate_root":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src","external_crates":[{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17664387582334346964,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15777239735188030211,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6931118634603707789,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[8877259021289820030,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1836679003453309343,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6793428100253957516,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6886380777913932080,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5166797399405618804,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15081119969799540083,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5636859111603542155,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2398051799168900592,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[12087602218788622031,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[10390304328721691412,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8054568656405061402,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[525761968053022061,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[6926870891054481868,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[13304424612223349919,0]}},{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[2957560935054177300,0]}}],"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":22},{"krate":0,"index":26}],"decl_id":null,"docs":" The standard library provides a convenient method of converting numbers into strings, but these strings are\n heap-allocated. If you have an application which needs to convert large volumes of numbers into strings, but don't\n want to pay the price of heap allocation, this crate provides an efficient `no_std`-compatible method of heaplessly converting numbers\n into their string representations, storing the representation within a reusable byte array.","sig":null,"attributes":[{"value":"/ The standard library provides a convenient method of converting numbers into strings, but these strings are","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":111,"line_start":1,"line_end":1,"column_start":1,"column_end":112}},{"value":"/ heap-allocated. If you have an application which needs to convert large volumes of numbers into strings, but don't","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":112,"byte_end":230,"line_start":2,"line_end":2,"column_start":1,"column_end":119}},{"value":"/ want to pay the price of heap allocation, this crate provides an efficient `no_std`-compatible method of heaplessly converting numbers","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":231,"byte_end":369,"line_start":3,"line_end":3,"column_start":1,"column_end":139}},{"value":"/ into their string representations, storing the representation within a reusable byte array.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":370,"byte_end":465,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":466,"byte_end":469,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In addition to supporting the standard base 10 conversion, this implementation allows you to select the base of","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":470,"byte_end":585,"line_start":6,"line_end":6,"column_start":1,"column_end":116}},{"value":"/ your choice. Therefore, if you want a binary representation, set the base to 2. If you want hexadecimal, set the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":586,"byte_end":702,"line_start":7,"line_end":7,"column_start":1,"column_end":117}},{"value":"/ base to 16.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":703,"byte_end":718,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":719,"byte_end":722,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Convenience Example","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":723,"byte_end":748,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":749,"byte_end":752,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":753,"byte_end":760,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use numtoa::NumToA;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":761,"byte_end":784,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":785,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 20];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":789,"byte_end":817,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/ let mut string = String::new();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":818,"byte_end":853,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":854,"byte_end":857,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for number in (1..10) {","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":858,"byte_end":885,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     string.push_str(number.numtoa_str(10, &mut buf));","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":886,"byte_end":943,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/     string.push('\\n');","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":944,"byte_end":970,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":971,"byte_end":976,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":977,"byte_end":980,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", string);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":981,"byte_end":1008,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1009,"byte_end":1016,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## Base 10 Example","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1021,"byte_end":1043,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1044,"byte_end":1051,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use numtoa::NumToA;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1052,"byte_end":1075,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1076,"byte_end":1107,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1108,"byte_end":1111,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let stdout = io::stdout();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1112,"byte_end":1142,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ let mut stdout = stdout.lock();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1143,"byte_end":1178,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let mut buffer = [0u8; 20];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1179,"byte_end":1210,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1211,"byte_end":1214,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let number: u32 = 162392;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1215,"byte_end":1244,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ let mut start_indice = number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1245,"byte_end":1303,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1304,"byte_end":1354,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1355,"byte_end":1387,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"162392\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1388,"byte_end":1439,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1440,"byte_end":1443,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let other_number: i32 = -6235;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1444,"byte_end":1478,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ start_indice = other_number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1479,"byte_end":1535,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1536,"byte_end":1586,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1587,"byte_end":1619,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"-6235\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1620,"byte_end":1670,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1671,"byte_end":1674,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let other_number: i8 = -128;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1675,"byte_end":1707,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ start_indice = other_number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1708,"byte_end":1764,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1765,"byte_end":1815,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1816,"byte_end":1848,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"-128\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1849,"byte_end":1898,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1899,"byte_end":1902,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let other_number: i8 = 53;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1903,"byte_end":1933,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/ start_indice = other_number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1934,"byte_end":1990,"line_start":54,"line_end":54,"column_start":1,"column_end":57}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":1991,"byte_end":2041,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2042,"byte_end":2074,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"53\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2075,"byte_end":2122,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2123,"byte_end":2126,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let other_number: i16 = -256;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2127,"byte_end":2160,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ start_indice = other_number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2161,"byte_end":2217,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2218,"byte_end":2268,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2269,"byte_end":2301,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"-256\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2302,"byte_end":2351,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2352,"byte_end":2355,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let other_number: i16 = -32768;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2356,"byte_end":2391,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ start_indice = other_number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2392,"byte_end":2448,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2449,"byte_end":2499,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2500,"byte_end":2532,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"-32768\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2533,"byte_end":2584,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2585,"byte_end":2588,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let large_num: u64 = 35320842;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2589,"byte_end":2623,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ start_indice = large_num.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2624,"byte_end":2677,"line_start":72,"line_end":72,"column_start":1,"column_end":54}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2678,"byte_end":2728,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2729,"byte_end":2761,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"35320842\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2762,"byte_end":2815,"line_start":75,"line_end":75,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2816,"byte_end":2819,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let max_u64: u64 = 18446744073709551615;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2820,"byte_end":2864,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/ start_indice = max_u64.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2865,"byte_end":2916,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2917,"byte_end":2967,"line_start":79,"line_end":79,"column_start":1,"column_end":51}},{"value":"/ let _ = stdout.write(b\"\\n\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":2968,"byte_end":3000,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"18446744073709551615\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3001,"byte_end":3066,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3067,"byte_end":3074,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3076,"byte_end":3086,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3305,"byte_end":3311,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"NumToA","qualname":"::NumToA","value":"NumToA<T>","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Converts a number into a string representation, storing the conversion into a mutable byte slice.\n","sig":null,"attributes":[{"value":"/ Converts a number into a string representation, storing the conversion into a mutable byte slice.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3193,"byte_end":3294,"line_start":92,"line_end":92,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4328,"byte_end":4334,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"numtoa","qualname":"::NumToA::numtoa","value":"pub fn numtoa(Self, T, &mut [u8]) -> usize","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Given a base for encoding and a mutable byte slice, write the number into the byte slice and return the\n indice where the inner string begins. The inner string can be extracted by slicing the byte slice from\n that indice.","sig":null,"attributes":[{"value":"/ Given a base for encoding and a mutable byte slice, write the number into the byte slice and return the","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3321,"byte_end":3428,"line_start":94,"line_end":94,"column_start":5,"column_end":112}},{"value":"/ indice where the inner string begins. The inner string can be extracted by slicing the byte slice from","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3433,"byte_end":3539,"line_start":95,"line_end":95,"column_start":5,"column_end":111}},{"value":"/ that indice.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3544,"byte_end":3560,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3565,"byte_end":3568,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3573,"byte_end":3585,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/ If the supplied buffer is smaller than the number of bytes needed to write the integer, this will panic.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3590,"byte_end":3698,"line_start":99,"line_end":99,"column_start":5,"column_end":113}},{"value":"/ On debug builds, this function will perform a check on base 10 conversions to ensure that the input array","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3703,"byte_end":3812,"line_start":100,"line_end":100,"column_start":5,"column_end":114}},{"value":"/ is large enough to hold the largest possible value in digits.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3817,"byte_end":3882,"line_start":101,"line_end":101,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3887,"byte_end":3890,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3895,"byte_end":3908,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3913,"byte_end":3920,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use numtoa::NumToA;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3925,"byte_end":3948,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3953,"byte_end":3984,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3989,"byte_end":3992,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let stdout = io::stdout();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3997,"byte_end":4027,"line_start":108,"line_end":108,"column_start":5,"column_end":35}},{"value":"/ let stdout = &mut io::stdout();","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4032,"byte_end":4067,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0u8; 20];","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4080,"byte_end":4111,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/ let number = 15325;","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4116,"byte_end":4139,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/ let start_indice = number.numtoa(10, &mut buffer);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4144,"byte_end":4198,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ let _ = stdout.write(&buffer[start_indice..]);","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4203,"byte_end":4253,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(&buffer[start_indice..], b\"15325\");","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4258,"byte_end":4308,"line_start":115,"line_end":115,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4313,"byte_end":4320,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4502,"byte_end":4512,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"numtoa_str","qualname":"::NumToA::numtoa_str","value":"pub fn numtoa_str(Self, T, &mut [u8; ]) -> &str","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Convenience method for quickly getting a string from the input's array buffer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4384,"byte_end":4407,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/ Convenience method for quickly getting a string from the input's array buffer.","span":{"file_name":"/home/voidxe/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4412,"byte_end":4494,"line_start":120,"line_end":120,"column_start":5,"column_end":87}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}